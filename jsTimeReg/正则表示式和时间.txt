正则表达式
//边界
^匹配输入字符串的开始位置
$匹配输入字符串的结束位置
.匹配任意字符
*匹配前面的子表达式零次或多次。例如，zo* 能匹配 "z" 以及 "zoo"。* 等价于{0,}
.* 就是单个字符匹配任意次，即贪婪匹配。 表达式 .*? 是满足条件的情况只匹配一次，即最小匹配。
?匹配前面的子表达式零次或一次。例如，"do(es)?" 可以匹配 "do" 或 "does" 。? 等价于 {0,1}。
\w匹配字母、数字、下划线。等价于'[A-Za-z0-9_]'。
\d匹配一个数字字符。等价于 [0-9]。
[a|b|c]匹配a或者b或者c
{}匹配的次数
()标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 \( 和 \)。
\将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如 '\(' 则匹配 "("。
g如果你不带g,在正则过程中，字符串是从左至右匹配的，如果匹配成功就不再继续向右匹配了
如果你带g,它会重头到尾的把正确匹配的字符串挑选出来，案例如下，结果输出两个is
var str="Is this all there is?";
var patt1=/is/g;
document.write(str.match(patt1));


日期
new Date() 获取js的日期对象
创建日期的参数
可以使用字符串 例:2019-1-2
可以传递多个参数表示年月日时分秒 例: new Date(2019,1,1)
可以放时间戳(毫秒)
getTime() 获取时间戳(毫秒)
时间戳:从1970年1月1日0点开始计数,没过一秒加1
getFullYear() 获取日期的年份
getMonth() 获取日期的月份
getDate() 获取日
getDay() 获取一周中的第几天